name: CI/CD

on:
  pull_request:
    # Triggers the workflow on pull request events, specifically when:
    # - a pull request is opened
    # - new commits are pushed to the pull request branch
    # - a pull request is reopened
    types: [opened, synchronize, reopened]
  push:
    # Optionally, also run on pushes to specific branches (e.g., main)
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Get the code from your repository

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12" # Or the specific Python version your backend uses

      - name: Install dependencies
        # This will depend on your project's dependency management (e.g., pip, poetry, npm)
        # Does this need a database container?
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipenv
          pipenv install

      - name: Wait for PostgreSQL
        run: |
          for i in `seq 1 10`; do
            nc -z localhost 5432 && break
            echo "Waiting for PostgreSQL..."
            sleep 5
          done
          echo "PostgreSQL is up!"

      - name: Run tests
        # Replace 'pytest' with the actual command to run your tests
        run: |
          # Flake8 tests
          pipenv run flake8 --config .flake8 api service
          # Django API tests
          pipenv run testapi
          # Service tests
          pipenv run testservice
          # Tasks tests
          pipenv run testtasks
          echo "All tests passed!"

      # Optional: Publish test results or artifacts
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test_reports
          path: api/test_reports/
