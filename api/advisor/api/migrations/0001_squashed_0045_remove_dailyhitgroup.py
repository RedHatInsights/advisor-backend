# Copyright 2016-2024 the Advisor Backend team at Red Hat.
# This file is part of the Insights Advisor project.

# Insights Advisor is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.

# Insights Advisor is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.

# You should have received a copy of the GNU General Public License along
# with Insights Advisor. If not, see <https://www.gnu.org/licenses/>.

# Generated by Django 5.1.5 on 2025-01-15 06:58

from django.conf import settings
from django.core.management import call_command
import django.db.migrations.operations.special
import django.db.models.deletion
import django.utils.timezone
import django_prometheus.models
from django.db import migrations, models


# api.migrations.0036_subscriptionexcludedaccount =>
def load_initial_autosub_exclusion_data(apps, schema_editor):
    if settings.ENVIRONMENT != 'dev':
        call_command(
            "loaddata", "../fixtures/autosub_exclusion_account_list.json"
        )


class Migration(migrations.Migration):

    replaces = [
        ('api', '0001_squashed_initial'),
        ('api', '0002_remove_currentreport_unused_indexes'),
        ('api', '0003_host_add_account'),
        ('api', '0004_host_account_required'),
        ('api', '0005_subset_model'),
        ('api', '0006_host_add_branch_id'),
        ('api', '0007_use_django_jsonfield'),
        ('api', '0008_ack_add_remote_branch'),
        ('api', '0009_delete_hosttag'),
        ('api', '0010_add_playbooks_fields'),
        ('api', '0011_make_display_name_nullable'),
        ('api', '0012_field_help_text'),
        ('api', '0013_host_one2one_inventoryhost'),
        ('api', '0014_host_remove_inventory_fields_1'),
        ('api', '0015_remove_host_rhel_version'),
        ('api', '0016_auto_20210329_1403'),
        ('api', '0017_delete_null_play_playbooks'),
        ('api', '0018_add_pathway_component'),
        ('api', '0019_add_slug_to_pathways'),
        ('api', '0020_ack_no_branch_id'),
        ('api', '0021_alter_dailyhitgroup_id'),
        ('api', '0022_add_org_id_columns'),
        ('api', '0023_remove_historic_report'),
        ('api', '0024_add_org_id_daily_hit_group_trigger'),
        ('api', '0025_drop_currentreport_upload_constraint'),
        ('api', '0026_make_account_nullable_org_id_required'),
        ('api', '0027_ack_hostack_unique_constraints'),
        ('api', '0028_delete_all_account_settings'),
        ('api', '0029_alter_unique_together_org_id'),
        ('api', '0030_alter_ack_options_etc'),
        ('api', '0031_currentreport_impacted_date'),
        ('api', '0032_delete_email_user_and_stale_qe_hosts'),
        ('api', '0034_no_show_satellite_setting'),
        ('api', '0035_add_weekly_report_autosub_field'),
        ('api', '0036_subscriptionexcludedaccount'),
        ('api', '0037_expand_org_id'),
        ('api', '0038_ack_hostack_created_by_255_chars'),
        ('api', '0039_remove_account_setting'),
        ('api', '0040_rulerating_rated_by_255_chars'),
        ('api', '0041_alter_ack_justification_alter_hostack_justification_and_more'),
        ('api', '0042_alter_pathway_unique_together_and_more'),
        ('api', '0043_pathways_conform_to_production_fixture'),
        ('api', '0044_remove_subset_model'),
        ('api', '0045_remove_dailyhitgroup')
    ]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Host',
            fields=[
                ('inventory', models.UUIDField(db_column="system_uuid", primary_key=True, serialize=False)),
                ('account', models.CharField(blank=True, max_length=10, null=True)),
                ('org_id', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('satellite_id', models.UUIDField(db_index=True, help_text='ID according to the managing Satellite server', null=True)),
                ('branch_id', models.UUIDField(db_index=True, help_text='ID of Satellite server that manages this host', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pathway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=240, unique=True)),
                ('description', models.CharField(max_length=240)),
                ('component', models.CharField(max_length=80)),
                ('resolution_risk_name', models.CharField(default='None', max_length=80)),
                ('publish_date', models.DateTimeField(null=True)),
                ('slug', models.SlugField(max_length=240, unique=True)),
            ],
            options={
                'ordering': ('name',),
                'unique_together': {('component', 'resolution_risk_name')},
            },
        ),
        migrations.CreateModel(
            name='ResolutionRisk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='None', max_length=80, unique=True)),
                ('risk', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='RuleCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='RuleImpact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='None', max_length=80, unique=True)),
                ('impact', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='RuleSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rule_source', models.URLField(unique=True)),
                ('description', models.CharField(max_length=120)),
                ('module_starts_with', models.CharField(default='invalid', max_length=80)),
            ],
            options={
                'ordering': ('rule_source',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('rule_id', models.CharField(help_text='Rule ID from Insights', max_length=240, unique=True)),
                ('description', models.CharField(max_length=240)),
                ('total_risk', models.PositiveSmallIntegerField(default=1)),
                ('active', models.BooleanField(default=False)),
                ('reboot_required', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(null=True)),
                ('likelihood', models.PositiveSmallIntegerField(default=0)),
                ('node_id', models.CharField(blank=True, help_text='KCS solution number', max_length=10)),
                ('summary', models.TextField()),
                ('generic', models.TextField()),
                ('reason', models.TextField()),
                ('more_info', models.TextField(blank=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.rulecategory')),
                ('impact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.ruleimpact')),
                ('ruleset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ruleset')),
                ('tags', models.ManyToManyField(related_name='rules', to='api.tag')),
                ('pathway', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.pathway')),
            ],
            options={
                'ordering': ('rule_id',),
            },
        ),
        migrations.CreateModel(
            name='SystemType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=15)),
                ('product_code', models.CharField(max_length=10)),
            ],
            options={
                'ordering': ('role', 'product_code'),
                'unique_together': {('role', 'product_code')},
            },
        ),
        migrations.CreateModel(
            name='UploadSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='insights-client', max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyReportSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='User to receive reports', max_length=255, unique=True)),
                ('account', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('org_id', models.CharField(db_index=True, max_length=50)),
                ('last_email_at', models.DateTimeField(default=None, null=True)),
                ('autosub', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('org_id', 'username'),
            },
        ),
        migrations.CreateModel(
            name='SubscriptionExcludedAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_id', models.CharField(db_index=True, max_length=50)),
                ('account', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
            ],
            options={
                'ordering': ('org_id', 'account'),
            },
            bases=(django_prometheus.models.ExportModelOperationsMixin('subscription_excluded_accounts'), models.Model),
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(blank=True, max_length=10, null=True)),
                ('org_id', models.CharField(max_length=50)),
                ('checked_on', models.DateTimeField(auto_now_add=True)),
                ('current', models.BooleanField(default=True)),
                ('is_satellite', models.BooleanField(default=True)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.host')),
                ('source', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='api.uploadsource')),
                ('system_type', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='api.systemtype')),
            ],
            options={
                'ordering': ('host', 'checked_on'),
            },
        ),
        migrations.CreateModel(
            name='RuleTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=80, unique=True)),
                ('slug', models.SlugField(help_text='Rule topic slug', max_length=20, unique=True)),
                ('description', models.TextField()),
                ('featured', models.BooleanField(default=False)),
                ('enabled', models.BooleanField(default=True)),
                ('tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='topic', to='api.tag')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='RuleRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rated_by', models.CharField(blank=True, default='', help_text='The username that rated this rule', max_length=255)),
                ('account', models.CharField(blank=True, max_length=10, null=True)),
                ('org_id', models.CharField(max_length=50)),
                ('rating', models.SmallIntegerField(choices=[(-1, 'Dislike'), (0, 'Neutral'), (1, 'Like')])),
                ('rule', models.ForeignKey(help_text='Insights Rule ID', on_delete=django.db.models.deletion.CASCADE, to='api.rule')),
            ],
            options={
                'ordering': ('rule__rule_id', 'rated_by'),
                'unique_together': {('rule', 'rated_by')},
            },
        ),
        migrations.CreateModel(
            name='Resolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolution', models.TextField()),
                ('resolution_risk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.resolutionrisk')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.rule')),
                ('system_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.systemtype')),
            ],
            options={
                'ordering': ('rule__rule_id', 'system_type__role', 'system_type__product_code'),
                'unique_together': {('rule', 'system_type')},
            },
        ),
        migrations.CreateModel(
            name='Playbook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(help_text='Eg fixit, workaround, kernel_update', max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('path', models.CharField(help_text='Path to playbook file on disk', max_length=255)),
                ('resolution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.resolution')),
                ('play', models.TextField(help_text='Ansible playbook', null=True)),
                ('version', models.CharField(help_text='Git commit of last modification', max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HostAck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('host', models.ForeignKey(on_delete=models.CASCADE, db_column='system_uuid', to='api.host')),
                ('account', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('org_id', models.CharField(db_index=True, max_length=50)),
                ('justification', models.CharField(blank=True, default='', max_length=255)),
                ('created_by', models.CharField(blank=True, default='', help_text='The username that created this acknowledgement', max_length=255)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.rule')),
            ],
            options={
                'ordering': ('org_id', 'host', 'rule__rule_id'),
                'unique_together': {('rule', 'org_id', 'host')},
            },
        ),
        migrations.CreateModel(
            name='CurrentReport',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('account', models.CharField(blank=True, max_length=10, null=True)),
                ('org_id', models.CharField(max_length=50)),
                ('details', models.JSONField()),
                ('rule', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='api.rule')),
                ('host', models.ForeignKey(db_column='system_uuid', db_index=False, on_delete=django.db.models.deletion.CASCADE, to='api.host')),
                ('upload', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.upload')),
                ('impacted_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, null=True)),
            ],
            options={
                'unique_together': {('org_id', 'rule', 'host')},
            },
        ),
        migrations.CreateModel(
            name='Ack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('org_id', models.CharField(db_index=True, max_length=50)),
                ('justification', models.CharField(blank=True, default='', help_text='The reason the rule was acked', max_length=255)),
                ('created_by', models.CharField(blank=True, default='', help_text='The user who created the ack', max_length=255)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.rule')),
            ],
            options={
                'ordering': ('org_id', 'rule__rule_id'),
                'unique_together': {('rule', 'org_id')},
            },
        ),
        migrations.AddConstraint(
            model_name='upload',
            constraint=models.UniqueConstraint(condition=models.Q(('current', True)), fields=('host', 'source'), name='api_upload_current_host_source_uniqueness'),
        ),
        migrations.AddIndex(
            model_name='upload',
            index=models.Index(condition=models.Q(('current', True)), fields=['org_id', 'host', 'id'], name='api_upload_org_id_host_id'),
        ),
        migrations.AddIndex(
            model_name='currentreport',
            index=models.Index(fields=['host', 'rule_id'], name='curreport_system_uuid_rule_id'),
        ),
        migrations.AddIndex(
            model_name='currentreport',
            index=models.Index(fields=['upload_id'], name='currentreport_upload_id'),
        ),
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='InventoryHost',
                    fields=[
                        ('id', models.UUIDField(primary_key=True, serialize=False)),
                        ('account', models.CharField(blank=True, max_length=10, null=True)),
                        ('org_id', models.CharField(max_length=50)),
                        ('display_name', models.CharField(max_length=200)),
                        # ('tags', django.contrib.postgres.fields.jsonb.JSONField()),
                        ('updated', models.DateTimeField()),
                        ('created', models.DateTimeField()),
                        ('stale_timestamp', models.DateTimeField()),
                        ('stale_warning_timestamp', models.DateTimeField()),
                        ('culled_timestamp', models.DateTimeField()),
                        # ('system_profile', django.contrib.postgres.fields.jsonb.JSONField()),
                        ('insights_id', models.UUIDField()),
                        ('tags', models.JSONField()),
                        ('system_profile', models.JSONField()),
                    ],
                    options={
                        'db_table': '"inventory"."hosts"',
                    },
                ),
                migrations.AlterModelOptions(
                    name='inventoryhost',
                    options={'managed': False},
                ),
            ],
        ),
        migrations.AlterField(
            model_name='host',
            name='inventory',
            field=models.OneToOneField(
                db_column="system_uuid", db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                primary_key=True, serialize=False,
                to="api.inventoryhost",
            ),
        ),
        migrations.RunPython(
            # code=api.migrations.0036_subscriptionexcludedaccount.load_initial_data,
            code=load_initial_autosub_exclusion_data,
        ),
    ]
