# Copyright 2016-2024 the Advisor Backend team at Red Hat.
# This file is part of the Insights Advisor project.

# Insights Advisor is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.

# Insights Advisor is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.

# You should have received a copy of the GNU General Public License along
# with Insights Advisor. If not, see <https://www.gnu.org/licenses/>.

# Generated by Django 4.1.2 on 2023-03-27 20:16

from django.db import migrations

# Timeout all jobs running longer than a day
cleanup_jobs = """
UPDATE tasks_job
SET status = 4 /* set to timeout */
FROM tasks_executedtask
WHERE tasks_executedtask.id = executed_task_id
  AND tasks_job.status = 1 /* currently running*/
  AND NOW() - start_time > '1 day';
"""

# Complete all executed tasks without a running job
cleanup_executed_tasks = """
UPDATE tasks_executedtask
SET status = 2 /*complete status*/
WHERE status = 1 /*currently running*/
    /*has no jobs running*/
  AND NOT EXISTS(SELECT 1 FROM tasks_job WHERE executed_task_id = tasks_executedtask.id AND tasks_job.status = 1);
"""


class Migration(migrations.Migration):

    dependencies = [
        ('tasks', '0004_expand_org_id'),
    ]

    operations = [
        migrations.RunSQL(cleanup_jobs),
        migrations.RunSQL(cleanup_executed_tasks),
    ]
