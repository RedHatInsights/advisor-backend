[[source]]
name = "pypi"
url = "https://pypi.org/simple"
verify_ssl = true

[requires]
python_version = "3.12"

[dev-packages]
coverage = "*"
drf-spectacular-sidecar = "*"
flake8 = "*"
flake8-junit-report = "*"
flake8-print = "*"
mock = "*"
path = "*"
pytest = "*"
pytest-mock = "*"
pytest-cov = "*"
pytest-server-fixtures = {extras = ["http"],version = "*"}
pytest-django = "*"
unittest-xml-reporting = "*"
django-stubs = "*"

[packages]
app-common-python = "*"
boto3 = "*"
cel-python = "==0.3.0"
django = "*"
django-prometheus = "*"
django-bulk-update = "*"
djangorestframework = "*"
djangorestframework-csv = "*"
djangorestframework-yaml = "*"
django-test-migrations = "*"
drf-spectacular = "*"
gunicorn = "*"
idna = "*"
logstash-formatter = "*"
markdown = "*"
openapi-spec-validator = "*"
prometheus-client = "*"
psycopg2 = "*"
pytz = "*"
requests = "*"
responses = "*"
setuptools = "*"
typing-extensions = "*"
tzdata = "*"
watchtower = "*"
unleashclient = "==5.12.2"
rpds-py = "==0.23.1"
jsonschema = "==4.24.0"
confluent-kafka = "==2.10.1"

[scripts]
migratedb = "api/advisor/manage.py migrate"
makemigrations = "api/advisor/manage.py makemigrations"
mockcyndi = "api/advisor/manage.py mock_cyndi_table"
loaddata = "api/advisor/manage.py loaddata rulesets rule_categories system_types upload_sources resolution_risks pathways"
loadtestdata = "api/advisor/manage.py loaddata basic_test_data"
linter = "flake8 ./api/advisor ./service --tee --output-file lint-results.txt"
testservice = "python -m pytest --junitxml=junit-service.xml --cov-config=.coveragerc --cov=./service --cov-report html service/tests -s -vv -W ignore::DeprecationWarning"
testapi = "env LOG_LEVEL=CRITICAL coverage run --include 'api/advisor/api/*,api/advisor/sat_compat/*' api/advisor/manage.py test api/advisor"
testtasks = "env LOG_LEVEL=CRITICAL coverage run --include 'api/advisor/tasks/*' api/advisor/manage.py test api/advisor/tasks"
apicovhtml = "coverage html"
runapi = "python api/advisor/manage.py runserver"
runservice = "env BOOTSTRAP_SERVERS=0.0.0.0:9092 ADVISOR_DB_HOST=localhost python service/service.py"
runtasks = "env BOOTSTRAP_SERVERS=0.0.0.0:9092 python api/advisor/manage.py tasks_service"
